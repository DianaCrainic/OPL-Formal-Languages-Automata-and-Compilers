begin_declarations

char a = 5, c = true;

float z, w;

function int : example(int er = 2, float a[10], char ch, bool a = true)
{
	int abc;
	while 2 < 3 do
	{
		if a < c then
		{
			int r;
		}
		else
		{
			while a < c do
			{
				int cc;
			}
		}
	}
	return a;
}

char b = 'a';

string d = "abc";

const bool aa = false;

class Example 
{
	float a2[10];

	method char proc(int a)
	{
		return 1;
	}

	method float p1()
	{
		return a;
	}

	method int abc(float b[12], char c)
	{
		int b33333 = 3;
		return a;
	}
}

int aaa[20] = {-1, 2, 2.5};

const int a2 = 2;


function float : abc(float A, float B, Example b)
{
	aaa = 5 + 3;
	return aaa;
}

function string : str(string z)
{
	return a2;
}

function string : str(string a, string b)
{
	return a2;
}

class Test 
{
	int a1;

	char a2[10];

	method int abc()
	{
		aaa = 2;
		return a2;
	}

	/*
	method int abc()
	{
		return 2;
	}
	*/
}

class test2
{
	float a = 12.7, b = 2;
}

class a
{
	
}

function char : g()
{
	return;
}

string s1, s2;


end_declarations



begin_main

a = b;
Eval(4 - 9);

c[2] = -3;

if a < b + true then
{
	a = 3;
	if a > 3 then
	{
		a = 5;
	}
	else
	{
		c = 3;
	}
}

for (int i = 1; i < 3; i = i + 1)
{
	a = 3;
}

a = call example(a,b,c);

aaa = call abc(2 * d + (a = call abc(1,2,aaa) ), b*c*(a = call str() ));

d = "abc";

d.c = 2;

a.prt = "abc";

a = call Example.proc (2.14, (a = call Test.abc (2*4, c, d.v) ));

while i > 3 do
{
	a = 2;
	i = i - 1;
}

Eval(5 + 2 / 4 - -3 + 5 * 2);
Eval(3 + 5);

s1 = concat(s1, s2);
a2 = length("abcd");
a2 = compare(s1, s2);
s2 = lower(s1);
s1 = upper(s2);


end_main